package COW2.Tests;

import COW2.*;

public class BranchTesterLevel5
{
    public static void main(String [] arg){
        testLevel5();
    }

    public static boolean testLevel5(){
        boolean one = testGetModifier();
        boolean two = testhowManyAreTheSame();
        boolean three = testtaxAmount();
        boolean four = testwhatZodiacSign();
        boolean five = testWhatToPrepare();
        if(one && two && three && four && five){
            System.out.println("Level 5 works");
            return true;
        }else{
            System.out.println("Level 5 DOES NOT work");
            return false;
        }
    }

    public static boolean testGetModifier(){
        Grader student = new Grader();
        boolean output = true;

        double [] grades = {50.0, 50.25, 50.5, 50.75, 51.0, 51.25, 51.5, 51.75, 52.0, 52.25, 52.5, 52.75, 53.0, 53.25, 53.5, 53.75, 54.0, 54.25, 54.5, 54.75, 55.0, 55.25, 55.5, 55.75, 56.0, 56.25, 56.5, 56.75, 57.0, 57.25, 57.5, 57.75, 58.0, 58.25, 58.5, 58.75, 59.0, 59.25, 59.5, 59.75, 60.0, 60.25, 60.5, 60.75, 61.0, 61.25, 61.5, 61.75, 62.0, 62.25, 62.5, 62.75, 63.0, 63.25, 63.5, 63.75, 64.0, 64.25, 64.5, 64.75, 65.0, 65.25, 65.5, 65.75, 66.0, 66.25, 66.5, 66.75, 67.0, 67.25, 67.5, 67.75, 68.0, 68.25, 68.5, 68.75, 69.0, 69.25, 69.5, 69.75, 70.0, 70.25, 70.5, 70.75, 71.0, 71.25, 71.5, 71.75, 72.0, 72.25, 72.5, 72.75, 73.0, 73.25, 73.5, 73.75, 74.0, 74.25, 74.5, 74.75, 75.0, 75.25, 75.5, 75.75, 76.0, 76.25, 76.5, 76.75, 77.0, 77.25, 77.5, 77.75, 78.0, 78.25, 78.5, 78.75, 79.0, 79.25, 79.5, 79.75, 80.0, 80.25, 80.5, 80.75, 81.0, 81.25, 81.5, 81.75, 82.0, 82.25, 82.5, 82.75, 83.0, 83.25, 83.5, 83.75, 84.0, 84.25, 84.5, 84.75, 85.0, 85.25, 85.5, 85.75, 86.0, 86.25, 86.5, 86.75, 87.0, 87.25, 87.5, 87.75, 88.0, 88.25, 88.5, 88.75, 89.0, 89.25, 89.5, 89.75, 90.0, 90.25, 90.5, 90.75, 91.0, 91.25, 91.5, 91.75, 92.0, 92.25, 92.5, 92.75, 93.0, 93.25, 93.5, 93.75, 94.0, 94.25, 94.5, 94.75, 95.0, 95.25, 95.5, 95.75, 96.0, 96.25, 96.5, 96.75, 97.0, 97.25, 97.5, 97.75, 98.0, 98.25, 98.5, 98.75, 99.0, 99.25, 99.5, 99.75, 100.0, };
        String [] results = {};

        for(int i = 0; i < grades.length; i++){
            if(!student.getModifier(grades[i]).equals(results[i])){
                System.out.println("getModifier failed, " + "getModifier(" + grades[i] + ")" + " results in " + student.getModifier(grades[i]) + ", not equal to " + results[i]);
                output = false;
            }
        }

        if(output){
            System.out.println("getModifier works");
        }else{
            System.out.println("getModifier does not work");
        }
        return output;
    }

    public static boolean testhowManyAreTheSame(){
        NumberAnalyzer student = new NumberAnalyzer();
        boolean output = true;

        int [] num1s = {353, -626, 718, 527, 335, 448, -603, -140, -694, 426, -606, -468, -641, -479, 522, -987, -564, -289, 210, 723, 233, -784, 707, -630, -734, -734, 921, -101, -247, 56, -654, 422, 995, -908, 626, -571, 108, 884, -700, 273, -917, 395, -965, 831, 457, -320, 338, 953, -42, -436, };
        int [] num2s = {557, 582, 520, 324, 714, 448, -603, -140, -715, -821, 368, 652, 170, -511, 873, 210, 361, 960, -365, -554, 333, -743, 328, -630, -734, -734, -268, -897, 346, 124, 707, -31, 995, -908, 626, -571, 108, 884, 217, 509, 292, -958, -209, -350, 457, -320, 338, 953, -42, -436, };
        int [] num3s = {-923, 431, -663, -989, -882, -249, -619, -17, -694, 426, -606, -881, -466, 122, 873, 210, 361, -612, -395, 16, 18, -207, -289, -727, -381, -446, 921, -101, -247, 124, 707, -31, 995, -908, 626, 151, 266, 164, -700, 273, -917, -958, -209, -350, 457, -320, 338, 953, -42, -436, };
        int [] num4s = {218, 595, -651, 779, 864, -228, -931, 898, 507, -558, -381, -468, -641, -479, -391, 658, -291, 960, -365, -554, 18, -207, -289, -727, -381, -446, -268, -897, 346, 56, -654, 422, 350, 112, -424, -571, 108, 884, -700, 273, -917, -958, -209, -350, 457, -320, 338, 953, -42, -436, };
        int [] results = {0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, };

        for(int i = 0; i < num1s.length; i++){
            if(student.howManyAreTheSame(num1s[i], num2s[i], num3s[i], num4s[i]) != results[i]){
                System.out.println("howManyAreTheSame failed, " + "howManyAreTheSame(" + num1s[i] + ", " + num2s[i] + ", " + num3s[i] + ", " + num4s[i] + ")" + " results in " + student.howManyAreTheSame(num1s[i], num2s[i], num3s[i], num3s[i]) + ", not equal to " + results[i]);
                output = false;
            }
        }

        if(output){
            System.out.println("howManyAreTheSame works");
        }else{
            System.out.println("howManyAreTheSame does not work");
        }
        return output;
    }

    public static boolean testtaxAmount(){
        PayRoll student = new PayRoll();
        boolean output = true;

        double [] income = {0.0, 500.0, 1000.0, 1500.0, 2000.0, 2500.0, 3000.0, 3500.0, 4000.0, 4500.0, 5000.0, 5500.0, 6000.0, 6500.0, 7000.0, 7500.0, 8000.0, 8500.0, 9000.0, 9500.0, 10000.0, 11000.0, 12000.0, 13000.0, 14000.0, 15000.0, 16000.0, 17000.0, 18000.0, 19000.0, 20000.0, 21000.0, 22000.0, 23000.0, 24000.0, 25000.0, 26000.0, 27000.0, 28000.0, 29000.0, 30000.0, 31000.0, 32000.0, 33000.0, 34000.0, 35000.0, 36000.0, 37000.0, 38000.0, 39000.0, 40000.0, 41000.0, 42000.0, 43000.0, 44000.0, 45000.0, 46000.0, 47000.0, 48000.0, 49000.0, 50000.0, 52000.0, 54000.0, 56000.0, 58000.0, 60000.0, 62000.0, 64000.0, 66000.0, 68000.0, 70000.0, 72000.0, 74000.0, 76000.0, 78000.0, 80000.0, 82000.0, 84000.0, 86000.0, 88000.0, 90000.0, 92000.0, 94000.0, 96000.0, 98000.0, 100000.0, 105000.0, 110000.0, 115000.0, 120000.0, 125000.0, 130000.0, 135000.0, 140000.0, 145000.0, 150000.0, 155000.0, 160000.0, 165000.0, 170000.0, 175000.0, 180000.0, 185000.0, 190000.0, 195000.0, 200000.0, 205000.0, 210000.0, 215000.0, 220000.0, 225000.0, 230000.0, 235000.0, 240000.0, 245000.0, 250000.0, 255000.0, 260000.0, 265000.0, 270000.0, 275000.0, 280000.0, 285000.0, 290000.0, 295000.0, 300000.0, 320000.0, 340000.0, 360000.0, 380000.0, 400000.0, 420000.0, 440000.0, 460000.0, 480000.0, 500000.0, 520000.0, 540000.0, 560000.0, 580000.0, 600000.0, 620000.0, 640000.0, 660000.0, 680000.0, 700000.0, 720000.0, 740000.0, 760000.0, 780000.0, 800000.0, 820000.0, 840000.0, 860000.0, 880000.0, 900000.0, 920000.0, 940000.0, 960000.0, 980000.0, 1000000.0, };
        double [] results = {0.0, 50.0, 100.0, 150.0, 200.0, 250.0, 300.0, 350.0, 400.0, 450.0, 500.0, 550.0, 600.0, 650.0, 700.0, 750.0, 800.0, 850.0, 900.0, 971.25, 1046.25, 1196.25, 1346.25, 1496.25, 1646.25, 1796.25, 1946.25, 2096.25, 2246.25, 2396.25, 2546.25, 2696.25, 2846.25, 2996.25, 3146.25, 3296.25, 3446.25, 3596.25, 3746.25, 3896.25, 4046.25, 4196.25, 4346.25, 4496.25, 4646.25, 4796.25, 4946.25, 5106.25, 5356.25, 5606.25, 5856.25, 6106.25, 6356.25, 6606.25, 6856.25, 7106.25, 7356.25, 7606.25, 7856.25, 8106.25, 8356.25, 8856.25, 9356.25, 9856.25, 10356.25, 10856.25, 11356.25, 11856.25, 12356.25, 12856.25, 13356.25, 13856.25, 14356.25, 14856.25, 15356.25, 15856.25, 16356.25, 16856.25, 17356.25, 17856.25, 18375.75, 18935.75, 19495.75, 20055.75, 20615.75, 21175.75, 22575.75, 23975.75, 25375.75, 26775.75, 28175.75, 29575.75, 30975.75, 32375.75, 33775.75, 35175.75, 36575.75, 37975.75, 39375.75, 40775.75, 42175.75, 43575.75, 44975.75, 46558.25, 48208.25, 49858.25, 51508.25, 53158.25, 54808.25, 56458.25, 58108.25, 59758.25, 61408.25, 63058.25, 64708.25, 66358.25, 68008.25, 69658.25, 71308.25, 72958.25, 74608.25, 76258.25, 77908.25, 79558.25, 81208.25, 82858.25, 89458.25, 96058.25, 102658.25, 109258.25, 115858.25, 123365.75, 131285.75, 139205.75, 147125.75, 155045.75, 162965.75, 170885.75, 178805.75, 186725.75, 194645.75, 202565.75, 210485.75, 218405.75, 226325.75, 234245.75, 242165.75, 250085.75, 258005.75, 265925.75, 273845.75, 281765.75, 289685.75, 297605.75, 305525.75, 313445.75, 321365.75, 329285.75, 337205.75, 345125.75, 353045.75, };

        for(int i = 0; i < income.length; i++){
            if(Math.abs(student.taxAmount(income[i]) - results[i]) > .01){
                System.out.println("taxAmount failed, " + "taxAmount(" + income[i]  + ")" + " results in " + student.taxAmount(income[i]) + ", not equal to " + results[i]);
                output = false;
            }
        }

        if(output){
            System.out.println("taxAmount works");
        }else{
            System.out.println("taxAmount does not work");
        }
        return output;
    }


    public static boolean testwhatZodiacSign(){
        Calendar student = new Calendar();
        boolean output = true;

        String [] months = {"January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "January", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "February", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "March", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "April", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "June", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "July", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "August", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "September", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "October", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "November", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December", "December"};
        int [] days = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, };
        String [] results = {"Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Aquarius", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Pisces", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Aries", "Taurus", "Taurus", "Taurus", "Taurus", "Taurus", "Taurus", "Taurus", "Taurus", "Taurus", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Gemini", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Cancer", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Leo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Virgo", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Libra", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Scorpio", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Sagittarius", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn", "Capricorn"};

        for(int i = 0; i < months.length; i++){
            if(student.whatZodiacSign(months[i], days[i]) != results[i]){
                System.out.println("whatZodiacSign failed, " + "whatZodiacSign(" + months[i] + ", " + days[i] + ")" + " results in " + student.whatZodiacSign(months[i], days[i]) + ", not equal to " + results[i]);
                output = false;
            }
        }

        if(output){
            System.out.println("whatZodiacSign works");
        }else{
            System.out.println("whatZodiacSign does not work");
        }
        return output;
    }


    public static boolean testWhatToPrepare(){
        Hogwarts student = new Hogwarts();
        boolean output = true;

        String [] days = {"Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Sunday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Monday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Tuesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Wednesday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Thursday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Friday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", "Saturday", };
        double [] times = {0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 21.0, 21.5, 22.0, 22.5, 23.0, 23.5, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 21.0, 21.5, 22.0, 22.5, 23.0, 23.5, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 21.0, 21.5, 22.0, 22.5, 23.0, 23.5, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 21.0, 21.5, 22.0, 22.5, 23.0, 23.5, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 21.0, 21.5, 22.0, 22.5, 23.0, 23.5, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 21.0, 21.5, 22.0, 22.5, 23.0, 23.5, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5, 19.0, 19.5, 20.0, 20.5, 21.0, 21.5, 22.0, 22.5, 23.0, 23.5, };
        boolean [] isVegi = {false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, };
        String [] results = {"biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "cereal", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "chicken with rice", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "biscuits with gravy", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", "steak and potatoes", };

        for(int i = 0; i < results.length; i++){
            if(!student.whatToPrepare(days[i], times[i], isVegi[i]).equals(results[i])){
                System.out.println("whatToPrepare failed, " + "whatToPrepare(" + days[i] + ", " + times[i] + ", " + isVegi[i] + ")" + " results in " + student.whatToPrepare(days[i], times[i], isVegi[i]) + ", not equal to " + results[i]);
                output = false;
            }
        }

        if(output){
            System.out.println("whatToPrepare works");
        }else{
            System.out.println("whatToPrepare does not work");
        }
        return output;
    }
}